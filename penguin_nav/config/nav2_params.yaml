bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    default_nav_through_poses_bt_xml: "$(find-pkg-share penguin_nav)/config/navigate_through_poses_w_replanning_and_recovery.xml"
    bt_loop_duration: 10
    default_server_timeout: 20
    enable_groot_monitoring: True
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: False

controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 5.0
    min_x_velocity_threshold: 0.05
    min_y_velocity_threshold: 0.5
    # min_theta_velocity_threshold: 0.001
    progress_checker_plugin: "progress_checker"
    goal_checker_plugin: "goal_checker"
    controller_plugins: ["FollowPath"]
    odom_topic: "/odom"

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 60.0

    # Goal checker parameters
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      #xy_goal_tolerance: 0.2
      #xy_goal_tolerance: 0.4
      xy_goal_tolerance: 0.8
      stateful: True
      #yaw_goal_tolerance: 0.174 # 10 degrees
      yaw_goal_tolerance: 1.57 # 10 degrees
    FollowPath:
#      plugin: "dwb_core::DWBLocalPlanner"
#      debug_trajectory_details: True
#      min_vel_x: 0.0
#      min_vel_y: 0.0
#      max_vel_x: 0.26
#      max_vel_y: 0.0
#      max_vel_theta: 1.0
#      min_speed_xy: 0.0
#      max_speed_xy: 0.26
#      min_speed_theta: 0.0
#      acc_lim_x: 2.5
#      acc_lim_y: 0.0
#      acc_lim_theta: 3.2
#      decel_lim_x: -2.5
#      decel_lim_y: 0.0
#      decel_lim_theta: -3.2
#      vx_samples: 20
#      vy_samples: 5
#      vtheta_samples: 20
#      sim_time: 1.7
#      linear_granularity: 0.05
#      angular_granularity: 0.025
#      transform_tolerance: 0.2
#      xy_goal_tolerance: 0.25
#      trans_stopped_velocity: 0.25
#      short_circuit_trajectory_evaluation: True
#      limit_vel_cmd_in_traj: False
#      stateful: True
#      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
#      BaseObstacle.scale: 0.02
#      PathAlign.scale: 32.0
#      GoalAlign.scale: 24.0
#      PathAlign.forward_point_distance: 0.1
#      GoalAlign.forward_point_distance: 0.1
#      PathDist.scale: 32.0
#      GoalDist.scale: 24.0
#      RotateToGoal.scale: 32.0
#      RotateToGoal.slowing_factor: 5.0
#      RotateToGoal.lookahead_time: -1.0


#    # MPPI Controller
#      plugin: "nav2_mppi_controller::MPPIController"
#      time_steps: 56
#      model_dt: 0.05
#      batch_size: 2000
#      vx_std: 0.2
#      vy_std: 0.2
#      wz_std: 0.4
#      vx_max: 0.5
#      vx_min: -0.35
#      vy_max: 0.5
#      wz_max: 1.9
#      ax_max: 3.0
#      ax_min: -3.0
#      ay_max: 3.0
#      az_max: 3.5
#      iteration_count: 1
#      prune_distance: 1.7
#      transform_tolerance: 0.1
#      temperature: 0.3
#      gamma: 0.015
#      motion_model: "DiffDrive"
#      visualize: false
#      reset_period: 1.0 # (only in Humble)
#      regenerate_noises: false
#      TrajectoryVisualizer:
#        trajectory_step: 5
#        time_step: 3
#      AckermannConstraints:
#        min_turning_r: 0.2
#      critics: ["ConstraintCritic", "CostCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
#      ConstraintCritic:
#        enabled: true
#        cost_power: 1
#        cost_weight: 4.0
#      GoalCritic:
#        enabled: true
#        cost_power: 1
#        cost_weight: 5.0
#        threshold_to_consider: 1.4
#      GoalAngleCritic:
#        enabled: true
#        cost_power: 1
#        cost_weight: 3.0
#        threshold_to_consider: 0.5
#      PreferForwardCritic:
#        enabled: true
#        cost_power: 1
#        cost_weight: 5.0
#        threshold_to_consider: 0.5
#      # ObstaclesCritic:
#      #   enabled: true
#      #   cost_power: 1
#      #   repulsion_weight: 1.5
#      #   critical_weight: 20.0
#      #   consider_footprint: false
#      #   collision_cost: 10000.0
#      #   collision_margin_distance: 0.1
#      #   near_goal_distance: 0.5
#      #   inflation_radius: 0.55 # (only in Humble)
#      #   cost_scaling_factor: 10.0 # (only in Humble)
#      CostCritic:
#        enabled: true
#        cost_power: 1
#        cost_weight: 3.81
#        critical_cost: 300.0
#        consider_footprint: true
#        collision_cost: 1000000.0
#        near_goal_distance: 1.0
#        trajectory_point_step: 2
#      PathAlignCritic:
#        enabled: true
#        cost_power: 1
#        cost_weight: 14.0
#        max_path_occupancy_ratio: 0.05
#        trajectory_point_step: 4
#        threshold_to_consider: 0.5
#        offset_from_furthest: 20
#        use_path_orientations: false
#      PathFollowCritic:
#        enabled: true
#        cost_power: 1
#        cost_weight: 5.0
#        offset_from_furthest: 5
#        threshold_to_consider: 1.4
#      PathAngleCritic:
#        enabled: true
#        cost_power: 1
#        cost_weight: 2.0
#        offset_from_furthest: 4
#        threshold_to_consider: 0.5
#        max_angle_to_furthest: 1.0
#        mode: 0
#      # VelocityDeadbandCritic:
#      #   enabled: true
#      #   cost_power: 1
#      #   cost_weight: 35.0
#      #   deadband_velocities: [0.05, 0.05, 0.05]
#      # TwirlingCritic:
#      #   enabled: true
#      #   twirling_cost_power: 1
#      #   twirling_cost_weight: 10.0


    # RegulatedPurePursuitController
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      # --- speed ------------------------------------------------------
      desired_linear_vel: 0.4
      desired_linear_vel: 0.7
      #desired_linear_vel: 0.45
      min_approach_linear_velocity: 0.35
      #min_approach_linear_velocity: 0.45
      approach_velocity_scaling_dist: 1.0
      #approach_velocity_scaling_dist: 0.01
      # --- speed scaling in curvature ------------------------------------------------------
      use_regulated_linear_velocity_scaling: true
      use_cost_regulated_linear_velocity_scaling: true
      regulated_linear_scaling_min_radius: 0.5
      regulated_linear_scaling_min_speed: 0.1
      # --- rotation ------------------------------------------------------
      use_rotate_to_heading: true
      #use_rotate_to_heading: true
      rotate_to_heading_min_angle: 0.5
     #rotate_to_heading_min_angle: 0.349 # 20 degrees
      rotate_to_heading_angular_vel: 0.8
      #rotate_to_heading_angular_vel: 0.5
      #max_angular_accel: 0.5
      max_angular_accel: 1.0
      # --- lookahead point ------------------------------------------------------
      use_velocity_scaled_lookahead_dist: true
      #   --- use_velocity_scaled_lookahead_dist == false
      lookahead_dist: 1.2
      #   --- use_velocity_scaled_lookahead_dist == true
      min_lookahead_dist: 0.8
      max_lookahead_dist: 2.5
      lookahead_time: 1.0
      #   --- velocity scaling in curvature
      use_fixed_curvature_lookahead: true
      curvature_lookahead_dist: 0.1
      # --- reversing ------------------------------------------------------
      allow_reversing: false
      # --- positioning ------------------------------------------------------
      #transform_tolerance: 0.2
      transform_tolerance: 1.57
      # --- collision detection ------------------------------------------------------
      use_collision_detection: true
      max_allowed_time_to_collision: 1.0
      # --- others ------------------------------------------------------
      max_robot_pose_search_dist: 8.0
      use_interpolation: false

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: False
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.1
      #robot_radius: 0.25
      robot_radius: 0.4
      plugins: ["obstacle_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        #inflation_radius: 0.3
        inflation_radius: 0.5
        #inflation_radius: 0.05
        cost_scaling_factor: 10.0
        #cost_scaling_factor: 1.0
        enabled: true
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        min_obstacle_height: -1000.0
        scan:
          topic: /scan
          sensor_frame: "base_link" # laserのtfを変更
          max_obstacle_height: 2.0
          min_obstacle_height: -1000.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.1
          obstacle_max_range: 10.0
          obstacle_min_range: 0.1
      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: False
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 2.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_link
      width: 20
      height: 20
      origin_x: -10.0
      origin_y: -10.0
      use_sim_time: False
      #robot_radius: 0.25
      robot_radius: 0.4
      resolution: 0.05
      track_unknown_space: false
      plugins: ["obstacle_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: True
        cost_scaling_factor: 1.0
        inflation_radius: 0.6
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        min_obstacle_height: -1000.0
        scan:
          topic: /scan
          sensor_frame: "base_link" # laserのtfを変更
          max_obstacle_height: 2.0
          #min_obstacle_height: -1.0
          min_obstacle_height: -1000.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.1
          obstacle_max_range: 10.0
          obstacle_min_range: 0.1
      always_send_full_costmap: True
  global_costmap_client:
    ros__parameters:
      use_sim_time: False
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      # SmacPlanner
      plugin: "nav2_smac_planner/SmacPlannerHybrid" # In Iron and older versions, "/" was used instead of "::"
      downsample_costmap: false           # whether or not to downsample the map
      downsampling_factor: 1              # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      tolerance: 0.8                     # dist-to-goal heuristic cost (distance) for valid tolerance endpoints if exact goal cannot be found.
      allow_unknown: true                 # allow traveling in unknown space
      max_iterations: 1000000             # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_on_approach_iterations: 1000    # Maximum number of iterations after within tolerances to continue to try to find exact solution
      max_planning_time: 5.0              # max time in s for planner to plan, smooth
      motion_model_for_search: "DUBIN"    # Hybrid-A* Dubin, Redds-Shepp
      angle_quantization_bins: 72         # Number of angle bins for search
      analytic_expansion_ratio: 3.5       # The ratio to attempt analytic expansions during search for final approach.
      analytic_expansion_max_length: 3.0  # For Hybrid/Lattice nodes: The maximum length of the analytic expansion to be considered valid to prevent unsafe shortcutting
      analytic_expansion_max_cost: 200.0  # The maximum single cost for any part of an analytic expansion to contain and be valid, except when necessary on approach to goal
      analytic_expansion_max_cost_override: false  #  Whether or not to override the maximum cost setting if within critical distance to goal (ie probably required)
      #minimum_turning_radius: 0.40        # minimum turning radius in m of path / vehicle
      minimum_turning_radius: 0.2        # minimum turning radius in m of path / vehicle
      reverse_penalty: 2.0                # Penalty to apply if motion is reversing, must be => 1
      change_penalty: 0.0                 # Penalty to apply if motion is changing directions (L to R), must be >= 0
      non_straight_penalty: 1.2           # Penalty to apply if motion is non-straight, must be => 1
      cost_penalty: 2.0                   # Penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
      retrospective_penalty: 0.015
      lookup_table_size: 20.0             # Size of the dubin/reeds-sheep distance window to cache, in meters.
      cache_obstacle_heuristic: false     # Cache the obstacle map dynamic programming distance expansion heuristic between subsequent replannings of the same goal location. Dramatically speeds up replanning performance (40x) if costmap is largely static.
      debug_visualizations: false         # For Hybrid nodes: Whether to publish expansions on the /expansions topic as an array of poses (the orientation has no meaning) and the path's footprints on the /planned_footprints topic. WARNING: heavy to compute and to display, for debug only as it degrades the performance.
      use_quadratic_cost_penalty: False
      downsample_obstacle_heuristic: True
      allow_primitive_interpolation: False
      smooth_path: True                   # If true, does a simple and quick smoothing post-processing to the path

      smoother:
        max_iterations: 1000
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10
        do_refinement: true
        refinement_num: 2

#      # NavFnPlanner
#      plugin: "nav2_navfn_planner/NavfnPlanner"
#      tolerance: 0.5
#      use_astar: false
#      allow_unknown: true

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    recovery_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_recoveries/Spin"
    backup:
      plugin: "nav2_recoveries/BackUp"
    wait:
      plugin: "nav2_recoveries/Wait"
    global_frame: map
    robot_base_frame: base_link
    transform_timeout: 0.1
    use_sim_time: False
    simulate_ahead_time: 1.0
    max_rotational_vel: 5.0
    min_rotational_vel: 0.5
    rotational_acc_lim: 0.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: False

waypoint_follower:
  ros__parameters:
    loop_rate: 200
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    smoothing_frequency: 20.0
    scale_velocities: false
    feedback: "OPEN_LOOP"
    max_velocity: [0.5, 0.0, 0.6]
    min_velocity: [-0.5, 0.0, -0.6]
    #max_velocity: [0.5, 0.0, 2.5]
    #min_velocity: [-0.5, 0.0, -2.5]
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0
    max_accel: [0.2, 0.0, 1.0]
    max_decel: [-0.8, 0.0, -3.2]
    #max_accel: [2.5, 0.0, 3.2]
    #max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odom"
    odom_duration: 0.1
    use_realtime_priority: false
    enable_stamped_cmd_vel: false

collision_monitor:
  ros__parameters:
    use_sim_time: False
    #base_frame_id: "base_footprint"
    base_frame_id: "base_link"
    odom_frame_id: "map"
    cmd_vel_in_topic: "cmd_vel_smoothed"
    cmd_vel_out_topic: "cmd_vel"
    transform_tolerance: 0.5
    source_timeout: 5.0
    base_shift_correction: True
    stop_pub_timeout: 2.0
    # Polygons represent zone around the robot for "stop" and "slowdown" action types,
    # and robot footprint for "approach" action type.
    # Footprint could be "polygon" type with dynamically set footprint from footprint_topic
    # or "circle" type with static footprint set by radius. "footprint_topic" parameter
    # to be ignored in circular case.
    polygons: ["PolygonStop", "PolygonSlow"]
    PolygonStop:
      type: "polygon"
      #points: [0.5, 0.4, 0.5, -0.4, -0.4, -0.4, -0.4, 0.4]
      points: [0.25, 0.25, 0.25, -0.25, -0.25, -0.25, -0.25, 0.25]
      action_type: "stop"
      max_points: 3
      visualize: True
      polygon_pub_topic: "polygon_stop"
      enabled: True
    PolygonSlow:
      type: "polygon"
      points: [0.7, 0.7, 0.7, -0.7, -0.7, -0.7, -0.7, 0.7]
      action_type: "slowdown"
      max_points: 3
      slowdown_ratio: 0.8
      visualize: True
      polygon_pub_topic: "polygon_slowdown"
      enabled: True
    FootprintApproach:
      type: "polygon"
      action_type: "approach"
      footprint_topic: "/local_costmap/published_footprint"
      time_before_collision: 2.0
      simulation_time_step: 0.1
      max_points: 5
      visualize: False
      enabled: True
    observation_sources: ["scan"]
    scan:
      type: "scan"
      topic: "/scan"
      enabled: True
